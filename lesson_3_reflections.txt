You can use a remote repository instead of a local one when you need to
collaborate with other people or access your repository on multiple computers.

You might want to always pull changes manually rather than have Git
automatically stay up-to-date with your remote repository because you never know
whether or not your local repository may be ahead or behind the remote and you
may lose changes that were made locally.

The differences between Forks, Clones and Branches are that Forks are a feature
of GitHub that allow to clone another author's repository and work on it as
though it were your own, while also giving them credit as the original author.
Cloning could achieve this but attribution would have to be given manually and
failure to do so could invite accusations of plagiarism. A Branch is a is an off-
shoot within a repository and without full push permission, you could never
merge your branches with a remote.

The benefit of having a copy of the last known state of the remote stored
locally is that your repo is not behind when you begin working on it. I'm not
sure what else to write here because, honestly, this section was a bit
confusing.

There are many ways to collaborate without using Git and GitHub but Git and
GitHub make it a lot easier and less prone to error.

You would want to make changes in a separate branch rather than directly in
the master when you're collaborating with someone who may have started the
master or when you're experimenting with changes and you don't want to risk
breaking the master. The benefit of this approach is that you can avoid
accidentally overwriting important elements of files or having your work
changes out from under you while collaborating.
